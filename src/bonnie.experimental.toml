# This file defines experimental syntax!

version = "0.3.0"
env_files = [
    ".env"
]
default_shell.generic = "sh -c \"{COMMAND}\"" # This will be used if the target being run on is not found in the following list
default_shell.targets.windows = "cmd /C \"{COMMAND}\""

[scripts]
# The most basic possible syntax
basic = "echo Test"
# Basic syntax, interpolates arguments and environment variables
interpolation.cmd = "echo %GREETING %name"
interpolation.args = ["name"]
interpolation.env_vars = ["GREETING"]
# This command will run differently on different targets
adaptable.cmd.generic = "echo Test"
adaptable.cmd.targets.magic_os = "please print string \"Test\" > console"
# This command will run differently in different shells on different targets
# Otherwise the shell would be selected from the options given under the top-level `default_shell`
super_versatile.cmd.generic.cmd = "echo Test"
super_versatile.cmd.generic.shell = "sh -c \"{COMMAND}\""
super_versatile.cmd.targets.magic_os.cmd = "please print string \"Test\" > console""
super_versatile.cmd.targets.magic_os.shell = "please run command \"{COMMAND}\" against sys"
# This command has multiple parts that will be run in series
multistage = [
    "echo \"Part 1\"",
    "echo \"Part 2\""
]
# This command has multiple parts that will be run in series, with interpolation
multistage_with_interpolation.cmd = [
    "echo \"Greeting: %GREETING\"",
    "echo \"Name: %name\""
]
multistage_with_interpolation.args = ["name"]
multistage_with_interpolation.env_vars = ["GREETING"]
# This command has a series of subcommands, one of which is multi-stage with interpolation
subcommands.domains.basic = "echo Test"
subcommands.domains.multistage_with_interpolation.cmd = [
    "echo \"Greeting: %GREETING\"",
    "echo \"Name: %name\""
]
subcommands.domains.multistage_with_interpolation.args = ["name"]
subcommands.domains.multistage_with_interpolation.env_vars = ["GREETING"]
# This command has a series of domains that will be executed in a certain order
# With this type, subcommands can't take arguments, all arguments must be provided up-front for the execution
power.domains.basic = "echo Test"
power.domains.multistage_with_interpolation.cmd = [
    "echo \"Greeting: %GREETING\"",
    "echo \"Name: %name\""
]
power.domains.multistage_with_interpolation.env_vars = ["GREETING"]
power.domains.error = "echo \"An error has occurred.\""
power.order = "basic s> multistage_with_interpolation f> error" # This syntax is HIGHLY EXPERIMENTAL!!!
power.args = ["name"]
